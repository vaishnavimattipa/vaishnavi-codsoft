"""Task:5 Contact Book"""
import json
class Contact:
    def _init_(self, name, phone, email):
        self.name = name
        self.phone = phone
        self.email = email

    def to_dict(self):
        return {"name": self.name, "phone": self.phone, "email": self.email}

class ContactBook:
    def _init_(self, filename='contacts.json'):
        self.contacts = []
        self.filename = filename
        self.load_contacts()

    def add_contact(self, contact):
        self.contacts.append(contact)
        self.save_contacts()

    def view_contacts(self):
        for contact in self.contacts:
            print(f'Name: {contact.name}, Phone: {contact.phone}, Email: {contact.email}')

    def delete_contact(self, name):
        self.contacts = [contact for contact in self.contacts if contact.name != name]
        self.save_contacts()

    def save_contacts(self):
        with open(self.filename, 'w') as file:
            json.dump([contact.to_dict() for contact in self.contacts], file)

    def load_contacts(self):
        try:
            with open(self.filename, 'r') as file:
                contacts_list = json.load(file)
                self.contacts = [Contact(**contact) for contact in contacts_list]
        except FileNotFoundError:
            self.contacts = []

def main():
    contact_book = ContactBook()

    while True:
        print("\n1. Add Contact\n2. View Contacts\n3. Delete Contact\n4. Exit")
        choice = input("Choose an option: ")

        if choice == '1':
            name = input("Enter name: ")
            phone = input("Enter phone: ")
            email = input("Enter email: ")
            contact = Contact(name, phone, email)
            contact_book.add_contact(contact)
        elif choice == '2':
            contact_book.view_contacts()
        elif choice == '3':
            name = input("Enter the name of the contact to delete: ")
            contact_book.delete_contact(name)
        elif choice == '4':
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
